name: Build App

on:
  push:
    branches:
      - feature/build

env:
  NODE_VERSION: '16'
  IONIC_VERSION: 'latest'
  CORDOVA_VERSION: '11.0.0'
  ANDROID_VERSION: '10.1.2'
  IOS_VERSION: '6.2.0'

jobs:
  android-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Ionic and Cordova globally
        run: |
          npm install -g @ionic/cli@${{ env.IONIC_VERSION }}
          npm install -g cordova@${{ env.CORDOVA_VERSION }}

      - name: Install project dependencies
        run: npm ci

      - name: Prepare project
        run: npm run prepare

      - name: Add Android platform
        run: ionic cordova platform add android@${{ env.ANDROID_VERSION }}

      - name: Build Android
        run: ionic cordova build android

  ios-build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Ionic and Cordova globally
        run: |
          npm install -g @ionic/cli@${{ env.IONIC_VERSION }}
          npm install -g cordova@${{ env.CORDOVA_VERSION }}

      - name: Install project dependencies
        run: npm ci

      - name: Prepare project
        run: npm run prepare

      - name: Add iOS platform
        run: ionic cordova platform add ios@${{ env.IOS_VERSION }}

      - name: Build iOS
        run: ionic cordova build ios
